"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefreshControlHelper = void 0;
const RefreshControlHelper = (Dynatrace, Logger) => ({
    attachToRender(refreshControl) {
        if (refreshControl.render !== undefined) {
            const renderOrig = refreshControl.render.bind(refreshControl);
            refreshControl.render = () => this.renderRefreshControl(renderOrig);
        }
    },
    renderRefreshControl(renderOrig) {
        const refreshControlRender = renderOrig();
        if (refreshControlRender != null &&
            refreshControlRender.props != null &&
            refreshControlRender.props.onRefresh) {
            return Object.assign(Object.assign({}, refreshControlRender), { props: Object.assign(Object.assign({}, refreshControlRender.props), { onRefresh: () => {
                        this.onRefresh(refreshControlRender);
                    } }) });
        }
        else {
            return refreshControlRender;
        }
    },
    onRefresh: (refreshControl) => {
        const action = Dynatrace.enterAction('Swipe to Refesh');
        if (refreshControl.props.onRefresh !== undefined) {
            refreshControl.props.onRefresh();
        }
        action.leaveAction();
    },
});
exports.RefreshControlHelper = RefreshControlHelper;
